import telebot
from telebot import types
import logging
import time

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

#-------------------- –û–°–ù–û–í–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò --------------------#

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç BotFather
bot = telebot.TeleBot('7582178055:AAGRAXRJQeLDgIiSF_B7Ui0hm596HhXnuNM')

# ID —á–∞—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–æ–∫
ADMIN_CHAT_ID = "814032949"

#-------------------- –ù–ê–°–¢–†–û–ô–ö–ê –ö–û–ú–ê–ù–î –ë–û–¢–ê --------------------#

def set_commands():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã—Ö –≤ –º–µ–Ω—é"""
    commands = [
        types.BotCommand("start", "–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º"),
        types.BotCommand("support", "–ù–∞–ø–∏—Å–∞—Ç—å –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É"),
        types.BotCommand("new_task", "–í—ã–ø–æ–ª–Ω–∏—Ç—å –Ω–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ")
    ]
    bot.set_my_commands(commands)

#-------------------- –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–û–ú–ê–ù–î --------------------#

@bot.message_handler(commands=['start'])
def send_welcome(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Å–µ–º–µ—Å—Ç—Ä–∞
    """
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –≤—ã–±–æ—Ä–æ–º —Å–µ–º–µ—Å—Ç—Ä–∞
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        ['2 —Å–µ–º–µ—Å—Ç—Ä', '3 —Å–µ–º–µ—Å—Ç—Ä'],
        ['4 —Å–µ–º–µ—Å—Ç—Ä'],
        ['–ö–∞—Å—Ç–æ–º–Ω–∞—è —Ä–∞–±–æ—Ç–∞']
    ]
    for row in buttons:
        markup.row(*[types.KeyboardButton(btn) for btn in row])

    welcome_text = """–ü—Ä–∏–≤–µ—Ç! üëã
    
–Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ë–ë–ò. 
–£ –º–µ–Ω—è –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ª—é–±–æ–π –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞–±–æ—Ç—ã –ø–æ –ª—é–±–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É.

–°—Ç–æ–∏–º–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–¥–Ω–æ–π —Ä–∞–±–æ—Ç—ã - 1000 —Ä—É–±–ª–µ–π. 
–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è - –¥–æ 24 —á–∞—Å–æ–≤ —Å –º–æ–º–µ–Ω—Ç–∞ –æ–ø–ª–∞—Ç—ã. 
–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤ –≤–∏–¥–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ PDF.

–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–º–µ—Å—Ç—Ä –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤:"""
    
    bot.send_message(message.chat.id, welcome_text, reply_markup=markup)

# –î–æ–±–∞–≤–∏–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–±–æ—Ä–∞ —Å–µ–º–µ—Å—Ç—Ä–∞
def show_semester_subjects(message, semester):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–¥–º–µ—Ç—ã –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–µ–º–µ—Å—Ç—Ä–∞
    """
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    
    # –°–ª–æ–≤–∞—Ä—å –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –ø–æ —Å–µ–º–µ—Å—Ç—Ä–∞–º
    semester_subjects = {
        '2 —Å–µ–º–µ—Å—Ç—Ä': [
            ['–¢–µ–æ—Ä–∏—è –°–∏—Å—Ç–µ–º', '–ü—Ä–æ—Ñ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ä–∏–π'],
            ['–û–û–ü'],
            ['–ù–∞–∑–∞–¥']
        ],
        '3 —Å–µ–º–µ—Å—Ç—Ä': [
            ['–î–ü–ü', '–ë–∞–∑—ã –î–∞–Ω–Ω—ã—Ö'],
            ['–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–æ–µ –ú–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ', '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ'],
            ['–ù–∞–∑–∞–¥']
        ],
        '4 —Å–µ–º–µ—Å—Ç—Ä': [
            ['–ú–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ë–ü', '–ü—Ä–æ—Ü–µ—Å—Å–Ω–æ–µ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ'],
            ['–¶–∏—Ñ—Ä–æ–≤–∞—è –≠–∫–æ–Ω–æ–º–∏–∫–∞', '–°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –ú–µ—Ç–æ–¥—ã'],
            ['–ù–∞–∑–∞–¥']
        ]
    }
    
    buttons = semester_subjects.get(semester, [['–ù–∞–∑–∞–¥']])
    for row in buttons:
        markup.row(*[types.KeyboardButton(btn) for btn in row])
    
    bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç {semester}–∞:", reply_markup=markup)

#-------------------- –û–ë–†–ê–ë–û–¢–ö–ê –í–´–ë–û–†–ê –ü–†–ï–î–ú–ï–¢–ê --------------------#

@bot.message_handler(content_types=['text'])
def handle_subject_selection(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Å–µ–º–µ—Å—Ç—Ä–∞, –ø—Ä–µ–¥–º–µ—Ç–∞ –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
    """
    try:
        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
        if message.text.startswith('/'): 
            return
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
        if message.text == '–ù–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ':
            return new_task(message)
        elif message.text == '–ü–æ–¥–¥–µ—Ä–∂–∫–∞':
            return support(message)
        elif message.text == '–ù–∞–∑–∞–¥':
            return send_welcome(message)
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Å–µ–º–µ—Å—Ç—Ä–∞
        semesters = ['2 —Å–µ–º–µ—Å—Ç—Ä', '3 —Å–µ–º–µ—Å—Ç—Ä', '4 —Å–µ–º–µ—Å—Ç—Ä']
        if message.text in semesters:
            return show_semester_subjects(message, message.text)
        
        # –í—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã
        all_subjects = [
            '–¢–µ–æ—Ä–∏—è –°–∏—Å—Ç–µ–º', '–ü—Ä–æ—Ñ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ä–∏–π', '–û–û–ü',
            '–î–ü–ü', '–ë–∞–∑—ã –î–∞–Ω–Ω—ã—Ö', '–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–æ–µ –ú–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ', '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ',
            '–ú–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ë–ü', '–ü—Ä–æ—Ü–µ—Å—Å–Ω–æ–µ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ',
            '–¶–∏—Ñ—Ä–æ–≤–∞—è –≠–∫–æ–Ω–æ–º–∏–∫–∞', '–°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –ú–µ—Ç–æ–¥—ã',
            '–ö–∞—Å—Ç–æ–º–Ω–∞—è —Ä–∞–±–æ—Ç–∞'
        ]
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–∞
        if message.text in all_subjects:
            # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –∑–∞–¥–∞–Ω–∏—è
            markup = types.ReplyKeyboardRemove()
            instruction_text = f"""–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø—Ä–µ–¥–º–µ—Ç: {message.text}

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ –ø–æ–¥—Ä–æ–±–Ω–æ:
- –°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ Moodle
- –§–ò–û, –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∞—è –≥—Ä—É–ø–ø–∞
- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è(–≤–∞—Ä–∏–∞–Ω—Ç/–ø–æ–∂–µ–ª–∞–Ω–∏—è/–¥—Ä—É–≥–æ–µ)"""
            
            bot.send_message(message.chat.id, instruction_text, reply_markup=markup)
            bot.register_next_step_handler(message, get_task_details)
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_subject_selection: {e}")
        bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.")

#-------------------- –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–ò–í–ù–´–ï –§–£–ù–ö–¶–ò–ò --------------------#

def create_admin_keyboard(task_id, user_id):
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–º"""
    markup = types.InlineKeyboardMarkup()
    markup.row(
        types.InlineKeyboardButton("–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É", callback_data=f"start_{task_id}_{user_id}"),
        types.InlineKeyboardButton("–û–ø–ª–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞", callback_data=f"paid_{task_id}_{user_id}")
    )
    markup.row(
        types.InlineKeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç", callback_data=f"complete_{task_id}_{user_id}")
    )
    return markup

#-------------------- –û–ë–†–ê–ë–û–¢–ö–ê –î–ï–¢–ê–õ–ï–ô –ó–ê–î–ê–ù–ò–Ø --------------------#

def get_task_details(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –∑–∞–¥–∞–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    """
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ–º–∞–Ω–¥—ã
    if message.text and message.text.startswith('/'):
        if message.text == '/support':
            return support(message)
        elif message.text == '/new_task':
            return new_task(message)
        return

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID –∑–∞–¥–∞–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Ä–µ–º–µ–Ω–∏
    task_id = str(int(time.time()))
    
    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    admin_text = f"""–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ #{task_id}
–û—Ç: @{message.from_user.username}
ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {message.from_user.id}

–î–µ—Ç–∞–ª–∏ –∑–∞–¥–∞–Ω–∏—è:
{message.text}"""
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    markup = create_admin_keyboard(task_id, message.from_user.id)
    bot.send_message(ADMIN_CHAT_ID, admin_text, reply_markup=markup)

    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    markup_user = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup_user.row(
        types.KeyboardButton('–ù–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ'),
        types.KeyboardButton('–ü–æ–¥–¥–µ—Ä–∂–∫–∞')
    )
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    bot.reply_to(message, 
                 "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é!\n"
                 "–ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!\n\n"
                 "–ü–æ—Å–ª–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ —è –ø—Ä–∏—à–ª—é –≤–∞–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.",
                 reply_markup=markup_user)

#-------------------- –°–ò–°–¢–ï–ú–ê –ü–û–î–î–ï–†–ñ–ö–ò --------------------#

def handle_support(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –≤–æ–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    """
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ–º–∞–Ω–¥—ã
    if message.text and message.text.startswith('/'):
        if message.text == '/support':
            return support(message)
        elif message.text == '/new_task':
            return new_task(message)
        return
        
    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    admin_text = f"""–û–±—Ä–∞—â–µ–Ω–∏–µ –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É
–û—Ç: @{message.from_user.username}
ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {message.from_user.id}

–¢–µ–∫—Å—Ç –æ–±—Ä–∞—â–µ–Ω–∏—è:
{message.text}"""
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    bot.send_message(ADMIN_CHAT_ID, admin_text)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row(
        types.KeyboardButton('–ù–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ'),
        types.KeyboardButton('–ü–æ–¥–¥–µ—Ä–∂–∫–∞')
    )
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    bot.reply_to(message, 
                 "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ!\n"
                 "–Ø —Ä–∞—Å—Å–º–æ—Ç—Ä—é –≤–∞—à –≤–æ–ø—Ä–æ—Å –∏ –æ—Ç–≤–µ—á—É –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
                 reply_markup=markup)

@bot.message_handler(commands=['support'])
def support(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /support - –Ω–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π"""
    markup = types.ReplyKeyboardRemove()
    bot.send_message(message.chat.id, 
                     "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É:\n"
                     "- –ü—Ä–æ–±–ª–µ–º–∞ —Å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–º –∑–∞–¥–∞–Ω–∏–µ–º\n"
                     "- –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –±–æ—Ç–æ–º\n"
                     "- –î—Ä—É–≥–∏–µ –≤–æ–ø—Ä–æ—Å—ã",
                     reply_markup=markup)
    bot.register_next_step_handler(message, handle_support)

@bot.message_handler(commands=['new_task'])
def new_task(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /new_task - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è"""
    send_welcome(message)

#-------------------- –û–ë–†–ê–ë–û–¢–ö–ê CALLBACK –ó–ê–ü–†–û–°–û–í --------------------#

@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    –£–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å–æ–º –∑–∞–∫–∞–∑–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    """
    action, task_id, user_id = call.data.split('_')
    
    if action == "start":
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–ø–ª–∞—Ç–µ
        payment_info = """–ó–∞—è–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!

–î–ª—è –æ–ø–ª–∞—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã (1000 —Ä—É–±–ª–µ–π) –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã:

–¢–ë–∞–Ω–∫: <code>+79621206360</code> 
"""
        
        bot.send_message(user_id, payment_info, parse_mode="HTML")
        bot.answer_callback_query(call.id, "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–ø–ª–∞—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        
    elif action == "paid":
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã
        bot.send_message(user_id, 
                        "–û–ø–ª–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞! –í–∞—à–µ –∑–∞–¥–∞–Ω–∏–µ –≤–∑—è—Ç–æ –≤ —Ä–∞–±–æ—Ç—É.\n"
                        "–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: 24 —á–∞—Å–∞ —Å –º–æ–º–µ–Ω—Ç–∞ —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.")
        bot.answer_callback_query(call.id, "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        
    elif action == "complete":
        # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –∏ –∑–∞–ø—Ä–æ—Å —Ñ–∞–π–ª–∞ —Ä–µ—à–µ–Ω–∏—è
        bot.send_message(user_id, 
                        "–í–∞—à–∞ —Ä–∞–±–æ—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞! –§–∞–π–ª —Å —Ä–µ—à–µ–Ω–∏–µ–º –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.")
        bot.answer_callback_query(call.id, "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        
        bot.send_message(call.message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª —Å —Ä–µ—à–µ–Ω–∏–µ–º.")
        bot.register_next_step_handler(call.message, send_solution_file, user_id)

#-------------------- –û–¢–ü–†–ê–í–ö–ê –§–ê–ô–õ–û–í --------------------#

def send_solution_file(message, user_id):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞ —Ä–µ—à–µ–Ω–∏—è
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –∏ –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    """
    try:
        if not message.document:
            bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª.")
            bot.register_next_step_handler(message, send_solution_file, user_id)
            return
        
        # –ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        bot.send_document(user_id, message.document.file_id, caption="–í–æ—Ç –≤–∞—à–µ —Ä–µ—à–µ–Ω–∏–µ!")
        bot.reply_to(message, "–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é!")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞: {e}")
        bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        bot.register_next_step_handler(message, send_solution_file, user_id)

#-------------------- –ó–ê–ü–£–°–ö –ë–û–¢–ê --------------------#

if __name__ == "__main__":
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
    set_commands()
    
    # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
    while True:
        try:
            logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
            bot.polling(none_stop=True, interval=1, timeout=60)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram: {e}")
            # –ü–∞—É–∑–∞ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω—ã–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º
            time.sleep(10)