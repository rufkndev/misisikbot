import telebot
from telebot import types
import logging
import time

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot('7582178055:AAGRAXRJQeLDgIiSF_B7Ui0hm596HhXnuNM')

# –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
def set_commands():
    commands = [
        types.BotCommand("start", "–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º"),
        types.BotCommand("support", "–ù–∞–ø–∏—Å–∞—Ç—å –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É"),
        types.BotCommand("new_task", "–í—ã–ø–æ–ª–Ω–∏—Ç—å –Ω–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ")
    ]
    bot.set_my_commands(commands)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    dpp_btn = types.KeyboardButton('–î–ü–ü')
    db_btn = types.KeyboardButton('–ë–∞–∑—ã –î–∞–Ω–Ω—ã—Ö')
    archmod_btn = types.KeyboardButton('–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–æ–µ –ú–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ')
    custom_btn = types.KeyboardButton('–ö–∞—Å—Ç–æ–º–Ω–∞—è —Ä–∞–±–æ—Ç–∞')
    
    markup.row(dpp_btn, db_btn)
    markup.row(archmod_btn)
    markup.row(custom_btn)

    welcome_text = """–ü—Ä–∏–≤–µ—Ç! üëã
    
–Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ë–ë–ò. 

–Ø –º–æ–≥—É –ø–æ–º–æ—á—å —Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –∏ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö —Ä–∞–±–æ—Ç –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –ø—Ä–µ–¥–º–µ—Ç–∞–º:
- –î–ü–ü
- –ë–∞–∑—ã –î–∞–Ω–Ω—ã—Ö
- –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–æ–µ –ú–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ
–ï—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ:
- –ö–∞—Å—Ç–æ–º–Ω–∞—è —Ä–∞–±–æ—Ç–∞

–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ä–∞–±–æ—Ç—É:"""
    
    bot.send_message(message.chat.id, welcome_text, reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–∞
@bot.message_handler(content_types=['text'])
def handle_subject_selection(message):
    try:
        if message.text.startswith('/'): 
            return
        
        if message.text == '–ù–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ':
            return new_task(message)
        elif message.text == '–ü–æ–¥–¥–µ—Ä–∂–∫–∞':
            return support(message)
        elif message.text in ['–î–ü–ü', '–ë–∞–∑—ã –î–∞–Ω–Ω—ã—Ö', '–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–æ–µ –ú–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ', '–ö–∞—Å—Ç–æ–º–Ω–∞—è —Ä–∞–±–æ—Ç–∞']:
            user_subject = message.text
            
            markup = types.ReplyKeyboardRemove()
            bot.send_message(message.chat.id, 
                            f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø—Ä–µ–¥–º–µ—Ç: {user_subject}\n\n"
                            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ –ø–æ–¥—Ä–æ–±–Ω–æ:\n"
                            "- –ü–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è\n"
                            "- –°—Ä–æ–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è\n"
                            "- –°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ Moodle\n"
                            "- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è",
                            reply_markup=markup)
            
            # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞
            bot.register_next_step_handler(message, get_task_details)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_subject_selection: {e}")
        bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–µ—Ç–∞–ª–µ–π –∑–∞–¥–∞–Ω–∏—è
def get_task_details(message):
    if message.text and message.text.startswith('/'):
        if message.text == '/support':
            return support(message)
        elif message.text == '/new_task':
            return new_task(message)
        return

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    new_task_btn = types.KeyboardButton('–ù–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ')
    support_btn = types.KeyboardButton('–ü–æ–¥–¥–µ—Ä–∂–∫–∞')
    markup.row(new_task_btn, support_btn)
    
    bot.reply_to(message, 
                 "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é!\n"
                 "–ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!\n\n"
                 "–ü–æ—Å–ª–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ —è –ø—Ä–∏—à–ª—é –≤–∞–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.\n\n"
                 "‚Ä¢ –°—Ç–æ–∏–º–æ—Å—Ç—å –ª—é–±–æ–π —Ä–∞–±–æ—Ç—ã - 1000 —Ä—É–±–ª–µ–π\n"
                 "‚Ä¢ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ–ø–ª–∞—Ç–µ - –≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏\n"
                 "‚Ä¢ –°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ª—é–±–æ–π —Ä–∞–±–æ—Ç—ã: 24 —á–∞—Å–∞ —Å –º–æ–º–µ–Ω—Ç–∞ –æ–ø–ª–∞—Ç—ã.\n"
                 "‚Ä¢ –ö–∞–∫ —Ç–æ–ª—å–∫–æ —Ä–∞–±–æ—Ç–∞ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞, —è –ø—Ä–∏—à–ª—é –≤–∞–º –∏—Ç–æ–≥–æ–≤—ã–π —Ñ–∞–π–ª.\n\n"
                 "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã, –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É.", 
                 reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏
def handle_support(message):
    if message.text and message.text.startswith('/'):
        if message.text == '/support':
            return support(message)
        elif message.text == '/new_task':
            return new_task(message)
        return
        
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    new_task_btn = types.KeyboardButton('–ù–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ')
    support_btn = types.KeyboardButton('–ü–æ–¥–¥–µ—Ä–∂–∫–∞')
    markup.row(new_task_btn, support_btn)
    
    bot.reply_to(message, 
                 "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ!\n"
                 "–Ø —Ä–∞—Å—Å–º–æ—Ç—Ä—é –≤–∞—à –≤–æ–ø—Ä–æ—Å –∏ –æ—Ç–≤–µ—á—É –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
                 reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /support
@bot.message_handler(commands=['support'])
def support(message):
    markup = types.ReplyKeyboardRemove()
    bot.send_message(message.chat.id, 
                     "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É:\n"
                     "- –ü—Ä–æ–±–ª–µ–º–∞ —Å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–º –∑–∞–¥–∞–Ω–∏–µ–º\n"
                     "- –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –±–æ—Ç–æ–º\n"
                     "- –î—Ä—É–≥–∏–µ –≤–æ–ø—Ä–æ—Å—ã",
                     reply_markup=markup)
    bot.register_next_step_handler(message, handle_support)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /new_task
@bot.message_handler(commands=['new_task'])
def new_task(message):
    send_welcome(message)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    set_commands()
    while True:
        try:
            logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
            bot.polling(none_stop=True, interval=1, timeout=60)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram: {e}")
            time.sleep(10)